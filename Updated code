tests/test_main.py [INFO] - 2024-11-21 21:27:03,865 - helpers - Parameters store: Lookup: FOT-Honda-lookup, MapDetails: global-map-details, FilterAttr: dmp-filter-attributes, UserTable: users, UserPoolID: ap-northeast-1_f3bcc01b8f18477ab1d861fd3b009c84, RoleTable: role-info
F

============================================== FAILURES ==============================================
_________________________________ test_get_filter_attributes_v2_new __________________________________

ssm_client = <botocore.client.SSM object at 0x7f8028799dc0>
cognito_client = (<botocore.client.CognitoIdentityProvider object at 0x7f80285cc730>, 'ap-northeast-1_f3bcc01b8f18477ab1d861fd3b009c84')
cloudwatch_log_client = <botocore.client.CloudWatchLogs object at 0x7f8027688cd0>
dynamodb_resource = dynamodb.ServiceResource()

    @mock_aws
    def test_get_filter_attributes_v2_new(ssm_client, cognito_client, cloudwatch_log_client, dynamodb_resource):
        """Test fetching filter attributes version 2."""
    
        client, user_pool_id = cognito_client
        put_parameter_store_config(ssm_client, ENV, user_pool_id)
        create_users_table(dynamodb_resource)
        user_table = dynamodb_resource.Table(USER_TABLE_NAME)
        insert_items_into_users_table(user_table)
        create_cloudwatch_log_group(cloudwatch_log_client, CLOUDWATCH_LOG_GROUP_NAME)
    
>       with patch("main.filter_attributes_table") as mock_filter_table, \
            patch("main.lookup_table") as mock_lookup_table, \
            patch("utility.get_db_client") as mock_db_client:

tests/test_main.py:7109: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/lib/python3.9/unittest/mock.py:1388: in __enter__
    self.target = self.getter()
/usr/lib/python3.9/unittest/mock.py:1563: in <lambda>
    getter = lambda: _importer(target)
/usr/lib/python3.9/unittest/mock.py:1235: in _importer
    thing = __import__(import_path)
main.py:38: in <module>
    from import_label_report_utility import LabelReport  # type: ignore
import_label_report_utility.py:22: in <module>
    from opensearch_utility import OpenSearchQueryUtility  # type: ignore
opensearch_utility.py:52: in <module>
    client = get_db_client(db_name="OpenSearchDB", env=ENV)
utility.py:429: in get_db_client
    db_client = OpenSearch(
../../../env/lib/python3.9/site-packages/opensearchpy/client/__init__.py:214: in __init__
    super().__init__(hosts, transport_class, **kwargs)
../../../env/lib/python3.9/site-packages/opensearchpy/client/client.py:41: in __init__
    self.transport = transport_class(_normalize_hosts(hosts), **kwargs)
../../../env/lib/python3.9/site-packages/opensearchpy/transport.py:201: in __init__
    self.set_connections(hosts)
../../../env/lib/python3.9/site-packages/opensearchpy/transport.py:255: in set_connections
    connections = list(zip(map(_create_connection, hosts), hosts))
../../../env/lib/python3.9/site-packages/opensearchpy/transport.py:253: in _create_connection
    return self.connection_class(metrics=self.metrics, **kwargs)
../../../env/lib/python3.9/site-packages/opensearchpy/connection/http_urllib3.py:130: in __init__
    super().__init__(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <[AttributeError("'Urllib3HttpConnection' object has no attribute 'host'") raised in repr()] Urllib3HttpConnection object at 0x7f8024af4f10>
host = None, port = 9200, use_ssl = True, url_prefix = '', timeout = 10, headers = {}
http_compress = True, opaque_id = None, kwargs = {}, scheme = 'https'

    def __init__(
        self,
        host: str = "localhost",
        port: Optional[int] = None,
        use_ssl: bool = False,
        url_prefix: str = "",
        timeout: int = 10,
        headers: Optional[Dict[str, str]] = None,
        http_compress: Optional[bool] = None,
        opaque_id: Optional[str] = None,
        **kwargs: Any,
    ) -> None:
        if port is None:
            port = 9200
    
        # Work-around if the implementing class doesn't
        # define the headers property before calling super().__init__()
        if not hasattr(self, "headers"):
            self.headers = {}
    
        headers = headers or {}
        for key in headers:
            self.headers[key.lower()] = headers[key]
        if opaque_id:
            self.headers["x-opaque-id"] = opaque_id
    
        if os.getenv("ELASTIC_CLIENT_APIVERSIONING") == "1":
            self.headers.setdefault(
                "accept", "application/vnd.elasticsearch+json;compatible-with=7"
            )
    
        self.headers.setdefault("content-type", "application/json")
        self.headers.setdefault("user-agent", self._get_default_user_agent())
    
        if http_compress:
            self.headers["accept-encoding"] = "gzip,deflate"
    
        scheme = kwargs.get("scheme", "http")
        if use_ssl or scheme == "https":
            scheme = "https"
            use_ssl = True
        self.use_ssl = use_ssl
        self.http_compress = http_compress or False
    
        self.scheme = scheme
        self.hostname = host
        self.port = port
>       if ":" in host:  # IPv6
E       TypeError: argument of type 'NoneType' is not iterable

../../../env/lib/python3.9/site-packages/opensearchpy/connection/base.py:121: TypeError
========================================== warnings summary ==========================================
../../../env/lib/python3.9/site-packages/opensearchpy/connection/http_urllib3.py:214
  /home/kpit/ADCP_DEV/env/lib/python3.9/site-packages/opensearchpy/connection/http_urllib3.py:214: UserWarning: Connecting to https://localhost:9200 using SSL with verify_certs=False is insecure.
    warnings.warn(

../../../env/lib/python3.9/site-packages/urllib3/connectionpool.py:1064
  /home/kpit/ADCP_DEV/env/lib/python3.9/site-packages/urllib3/connectionpool.py:1064: InsecureRequestWarning: Unverified HTTPS request is being made to host 'localhost'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
    warnings.warn(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
====================================== short test summary info =======================================
FAILED tests/test_main.py::test_get_filter_attributes_v2_new - TypeError: argument of type 'NoneType' is not iterable
