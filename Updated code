I have reference class

class DriveSessionUtility:
    """
    A utility class for querying to retrieve the latest 'rec_year_month_date'.

    Attributes:
        index_name (str): The name of the OpenSearch drive session index.
    """

    def __init__(
        self: OpenSearchDriveSessionUtilityVar, index_name: str
    ) -> None:
        """
        Initialize the OpenSearchDriveSessionUtility.

        Args:
            index_name (str): The name of the OpenSearch drive session index.
        """
        self.index_name = index_name

    def create_query(self: OpenSearchDriveSessionUtilityVar) -> dict[str, Any]:
        """
        Create an OpenSearch query to fetch latest `rec_year_month_date`.

        Returns:
            dict: The OpenSearch query.
        """
        query: dict[str, Any] = {
            "size": 1,
            "_source": ["rec_year_month_date"],
            "sort": [{"rec_year_month_date": {"order": "desc"}}],
            "query": {"match_all": {}},
        }
        return query

    def get_rec_year_month_date(self: OpenSearchDriveSessionUtilityVar) -> str:
        """
        Execute an OpenSearch query on the index to get "rec_year_month_date".

        Returns:
            str: The most recent `rec_year_month_date` if found.
            or empty response if the index doesn't exist.
        """
        if client.indices.exists(index=self.index_name):
            query = self.create_query()
            response = client.search(index=self.index_name, body=query)

            if response['hits']['hits']:
                rec_year_month_date = response['hits']['hits'][0][
                    '_source'
                ].get('rec_year_month_date')
                return (
                    rec_year_month_date
                    if rec_year_month_date
                    else "Unavailable"
                )
            return "Unavailable"
        return "Unavailable"


like that we have to create a class for to get distinct vehicle ids.
as you have given the query to get the distinct vehicle ids.
from that query i am getting below query response,

{
  "took": 1,
  "timed_out": false,
  "_shards": {
    "total": 1,
    "successful": 1,
    "skipped": 0,
    "failed": 0
  },
  "hits": {
    "total": {
      "value": 34,
      "relation": "eq"
    },
    "max_score": null,
    "hits": []
  },
  "aggregations": {
    "unique_vehicle_ids": {
      "after_key": {
        "vehicle_id": "43"
      },
      "buckets": [
        {
          "key": {
            "vehicle_id": "11"
          },
          "doc_count": 2
        },
        {
          "key": {
            "vehicle_id": "41"
          },
          "doc_count": 19
        },
        {
          "key": {
            "vehicle_id": "43"
          },
          "doc_count": 13
        }
      ]
    }
  }
}

please create a class 
