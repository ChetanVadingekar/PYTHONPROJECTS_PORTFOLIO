def get_ddb_table_names(db: str = "DDB", env: str = ENV, extra_params: list[str] = None) -> dict:
    """
    Get table names and optionally other parameters from parameter store.
    Args:
        db (str): db component name
        env (str): environment
        extra_params (list): Optional list of additional parameters to fetch
    Returns:
        dict: A dictionary containing table names and optionally other parameters
    """
    path = f"/{env}/{db}/"
    parameters = {
        "lookup": "",
        "map_details": "",
        "filter_attr": "",
        "user_table": ""
    }
    
    ssm_client = boto3.client("ssm", region_name=REGION_NAME)
    
    try:
        # Fetch DDB table names
        response = ssm_client.get_parameters_by_path(
            Path=path, Recursive=True, WithDecryption=True
        )
        for param_info in response.get("Parameters", []):
            name = param_info.get("Name", "")
            if "LookupTable" in name:
                parameters["lookup"] = param_info.get("Value", "")
            elif "FilterAttributesTable" in name:
                parameters["filter_attr"] = param_info.get("Value", "")
            elif "MapDetailsTable" in name:
                parameters["map_details"] = param_info.get("Value", "")
        # Fetch User Table
        response = ssm_client.get_parameter(
            Name=f"/{env}/UserManagement/DDB/UserTable"
        )
        parameters["user_table"] = response["Parameter"]["Value"]
        # Fetch additional parameters if specified
        if extra_params:
            for param in extra_params:
                response = ssm_client.get_parameter(Name=param)
                param_name = param.split("/")[-1]  # Get the last part of the parameter path as key
                parameters[param_name] = response["Parameter"]["Value"]
    except ssm_client.exceptions.ParameterNotFound:
        logging.error("Could not find one or more parameters in Parameter Store")
    except ssm_client.exceptions.InternalServerError:
        logging.error("Error occurred while fetching parameters")
    logging.info(
        "Parameters store: Lookup: %s, MapDetails: %s, FilterAttr: %s, UserTable: %s"
        % (parameters["lookup"], parameters["map_details"], parameters["filter_attr"], parameters["user_table"])
    )
    return parameters
