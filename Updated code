DDB data


{
 "bucket_name": {
  "S": "tftpl-testprod-raw-bucket"
 },
 "project_name": {
  "S": "testprod"
 },
 "bucket_arn": {
  "S": "arn:aws:s3:::tftpl-testprod-raw-bucket"
 },
 "company_name": {
  "S": "Honda"
 },
 "country_code": {
  "S": "EU"
 },
 "country_name": {
  "S": "Europe"
 },
 "drive_session_table_name": {
  "S": "testprod-drive-data"
 },
 "event_session_table_name": {
  "S": "testprod-event-data"
 },
 "generation_name": {
  "S": "3.0"
 },
 "input_bucket_name": {
  "S": "adcp-test-input"
 },
 "input_bucket_region": {
  "S": "us-east-2"
 },
 "merged_bucket_name": {
  "S": "tftpl-testprod-merge-bucket"
 },
 "metadata_table_name": {
  "S": "testprod-metadata-table"
 },
 "model_name": {
  "S": "Model-10"
 },
 "organization_name": {
  "S": "AS4"
 },
 "parquet_bucket_name": {
  "S": "tftpl-testprod-parquet-bucket"
 },
 "pid": {
  "S": "7c7cfb4e-e0d1-8ad4-95b3-0efb4851"
 },
 "prefix": {
  "S": "tftpl"
 },
 "raw_bucket_name": {
  "S": "tftpl-testprod-raw-bucket"
 },
 "region": {
  "S": "ap-northeast-1"
 },
 "ros_bucket_name": {
  "S": "tftpl-testprod-rosbag-bucket"
 },
 "suffix": {
  "S": "raw-bucket"
 }
}

so there are number of items would be in future.

So currently what we are doing we are fetching the drive_session_table_name using project_name with scan operation
so see below scan call.


lookup_response = lookup_table.scan(
            FilterExpression=boto3.dynamodb.conditions.Attr('project_name').eq(
                project_name
            )
        )

but now we have to add pagination for this query.
so we have added like this


        while lookup_response.get("LastEvaluatedKey"):
            response = lookup_table.scan(
                FilterExpression=boto3.dynamodb.conditions.
                Attr('project_name').eq(project_name),
                ExclusiveStartKey=response["LastEvaluatedKey"],
            )
            if response.get("Items"):
               lookup_response.extend(response.get("Items"))

        items = lookup_response.get('Items', [])
		
please let me know is that correct pagination we have implemented.
