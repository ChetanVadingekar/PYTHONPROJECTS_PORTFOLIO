def fetch_data_from_lookup_table(
    bucket_name: Optional[str] = None, project_name: Optional[str] = None
) -> list:
    """
    Fetch the lookup data.

    Args:
        bucket_name (Optional[str]): Raw data bucket name as Primary Key
        project_name (Optional[str]): Project name as Sort Key

    Returns:
        (list): Lookup info from the table

    """
    if bucket_name and project_name:
        response = lookup_table.query(
            KeyConditionExpression=Key('bucket_name').eq(bucket_name)
            & Key('project_name').eq(project_name),
        )
    elif bucket_name:
        response = lookup_table.query(
            KeyConditionExpression=Key('bucket_name').eq(bucket_name),
        )
    elif project_name:
        response = lookup_table.scan(
            FilterExpression=Key('project_name').eq(project_name),
        )
    lookup_data = response["Items"]  # type: ignore
    next_token = response.get("LastEvaluatedKey")

    while next_token:
        if bucket_name and project_name:
            response = lookup_table.query(
                KeyConditionExpression=Key('bucket_name').eq(bucket_name)
                & Key('project_name').eq(project_name),
                ExclusiveStartKey=next_token,
            )
        elif bucket_name:
            response = lookup_table.query(
                KeyConditionExpression=Key('bucket_name').eq(bucket_name),
                ExclusiveStartKey=next_token,
            )
        elif project_name:
            response = lookup_table.scan(
                FilterExpression=Key('project_name').eq(project_name),
                ExclusiveStartKey=next_token,
            )
        lookup_data.extend(response["Items"])  # type: ignore
        next_token = response.get("LastEvaluatedKey")

    return lookup_data if lookup_data else []

So already we have this function so we need to reuse it fetch_project_name_table function.

def fetch_project_name_table(project_name: str, table_key: str) -> str:
    """
    Fetch the corresponding table name for a project.

    Args:
        project_name (str): The project name.
        table_key (str): The key in the lookup table.

    Returns:
        str: Table name for the project.

    Raises:
        KeyError: If the project or table name is not found.
    """
    lookup_response = lookup_table.scan(
        FilterExpression=boto3.dynamodb.conditions.Attr('project_name').eq(
            project_name
        )
    )
    items = lookup_response.get('Items', [])
    while 'LastEvaluatedKey' in lookup_response:
        lookup_response = lookup_table.scan(
            FilterExpression=boto3.dynamodb.conditions.Attr('project_name').eq(
                project_name
            ),
            ExclusiveStartKey=lookup_response['LastEvaluatedKey'],
        )
        items.extend(lookup_response.get('Items', []))
    if not items:
        raise KeyError("Project not found")


Can you please update this function.
