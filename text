@app.route('/fetch-filter-attributes-v2', methods=['GET'])
def get_filter_attributes_v2() -> ResponseReturnValue:
    """
    Fetch filter options from dynamoDB table - version 2.

    Returns:
        (ResponseReturnValue): filter options list and status code.
    """
    try:
        page = request.args.get('page')
        filter_level = request.args.get('filter_level')
        generation = request.args.get('generation')
        response = filter_attributes_table.get_item(
            Key={'page': page, 'filter_level': filter_level}
        )
        if page == "event_sessions":
            common_attributes = response['Item']['common_attributes']
            gen_attributes = response['Item'][f'gen_attributes_{generation}']
            final_response = {
                **common_attributes,  # type: ignore
                **gen_attributes,  # type: ignore
            }
        else:
            final_response = response['Item']['attributes']  # type: ignore
        logging.info(
            f"dynamoDB response for fetching filter " f"attributes: {response}"
        )
        return (
            jsonify(final_response),  # type: ignore
            200,
        )
    except KeyError as e:
        logging.error("KeyError occurred: %s", str(e))
        return (
            jsonify({'message': "No generation category information found"}),
            404,
        )
    except Exception as e:
        logging.exception(f"An error occurred: {str(e)}")
        return jsonify({"message": str(e)}), 500
